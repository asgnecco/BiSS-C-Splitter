-- -------------------------------------------------------------
-- 
-- File Name: Generated HDL Code\BiSS_Splitter_Rev8\DAQ_BiSS_C_Slave.vhd
-- Created: 2020-09-09 16:25:01
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: DAQ_BiSS_C_Slave
-- Source Path: BiSS_Splitter_Rev8/DAQ BiSS C Slave
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY DAQ_BiSS_C_Slave IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        Buffer_In                         :   IN    std_logic;
        Trig                              :   IN    std_logic;
        DAQ_Read_Done                     :   IN    std_logic;
        DAQ_Read_Clock                    :   OUT   std_logic;
        Data_Log_Out                      :   OUT   std_logic;
        DAQ_Read_Request                  :   OUT   std_logic
        );
END DAQ_BiSS_C_Slave;


ARCHITECTURE rtl OF DAQ_BiSS_C_Slave IS

  -- Component Declarations
  COMPONENT Chart_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          MA_in                           :   IN    std_logic;
          reset_1                         :   IN    std_logic;
          state                           :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Chart_block
    USE ENTITY work.Chart_block(rtl);

  -- Signals
  SIGNAL state                            : std_logic;
  SIGNAL Constant_out1                    : std_logic;
  SIGNAL Switch_out1                      : std_logic;
  SIGNAL Delay_out1                       : std_logic;

BEGIN
  u_Chart : Chart_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              MA_in => Trig,
              reset_1 => DAQ_Read_Done,
              state => state
              );

  Constant_out1 <= '1';

  
  Switch_out1 <= Constant_out1 WHEN state = '0' ELSE
      Buffer_In;

  Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay_out1 <= state;
      END IF;
    END IF;
  END PROCESS Delay_process;


  DAQ_Read_Clock <= Trig;

  Data_Log_Out <= Switch_out1;

  DAQ_Read_Request <= Delay_out1;

END rtl;

