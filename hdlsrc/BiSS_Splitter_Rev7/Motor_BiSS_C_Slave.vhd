-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\BiSS_Splitter_Rev7\Motor_BiSS_C_Slave.vhd
-- Created: 2020-08-28 16:31:32
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Motor_BiSS_C_Slave
-- Source Path: BiSS_Splitter_Rev7/Motor BiSS C Slave
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Motor_BiSS_C_Slave IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        Buffer_In                         :   IN    std_logic;
        MA_In                             :   IN    std_logic;
        Motor_Done_In                     :   IN    std_logic;
        SLO_Out                           :   OUT   std_logic;
        Motor_Read_Clock                  :   OUT   std_logic;
        Motor_Read_Request                :   OUT   std_logic
        );
END Motor_BiSS_C_Slave;


ARCHITECTURE rtl OF Motor_BiSS_C_Slave IS

  -- Component Declarations
  COMPONENT Chart_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          MA_in                           :   IN    std_logic;
          reset_1                         :   IN    std_logic;
          state                           :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Chart_block
    USE ENTITY work.Chart_block(rtl);

  -- Signals
  SIGNAL Chart_out1                       : std_logic;
  SIGNAL Constant_out1                    : std_logic;
  SIGNAL Switch_out1                      : std_logic;
  SIGNAL Delay_out1                       : std_logic;

BEGIN
  u_Chart : Chart_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              MA_in => MA_In,
              reset_1 => Motor_Done_In,
              state => Chart_out1
              );

  Constant_out1 <= '1';

  
  Switch_out1 <= Constant_out1 WHEN Chart_out1 = '0' ELSE
      Buffer_In;

  Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Delay_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay_out1 <= Chart_out1;
      END IF;
    END IF;
  END PROCESS Delay_process;


  SLO_Out <= Switch_out1;

  Motor_Read_Clock <= MA_In;

  Motor_Read_Request <= Delay_out1;

END rtl;

