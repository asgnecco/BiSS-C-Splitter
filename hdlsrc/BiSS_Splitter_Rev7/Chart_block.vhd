-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\BiSS_Splitter_Rev7\Chart_block.vhd
-- Created: 2020-08-28 16:31:32
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Chart_block
-- Source Path: BiSS_Splitter_Rev7/DAQ BiSS C Slave/Chart
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.BiSS_Splitter_Rev7_pac.ALL;

ENTITY Chart_block IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        MA_in                             :   IN    std_logic;
        reset_1                           :   IN    std_logic;
        state                             :   OUT   std_logic
        );
END Chart_block;


ARCHITECTURE rtl OF Chart_block IS

  -- Functions
  -- HDLCODER_TO_STDLOGIC 
  FUNCTION hdlcoder_to_stdlogic(arg: boolean) RETURN std_logic IS
  BEGIN
    IF arg THEN
      RETURN '1';
    ELSE
      RETURN '0';
    END IF;
  END FUNCTION;


  -- Signals
  SIGNAL is_Chart                         : T_state_type_is_Chart1;  -- uint8
  SIGNAL is_Chart_next                    : T_state_type_is_Chart1;  -- enum type state_type_is_Chart1 (2 enums)

BEGIN
  Chart_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        is_Chart <= IN_Off;
      ELSIF enb = '1' THEN
        is_Chart <= is_Chart_next;
      END IF;
    END IF;
  END PROCESS Chart_process;

  Chart_output : PROCESS (MA_in, is_Chart, reset_1)
    VARIABLE sf_internal_predicateOutput : std_logic;
  BEGIN
    sf_internal_predicateOutput := '0';
    is_Chart_next <= is_Chart;
    CASE is_Chart IS
      WHEN IN_Off =>
        IF ( NOT MA_in) = '1' THEN 
          is_Chart_next <= IN_On;
          state <= '1';
        ELSE 
          state <= '0';
        END IF;
      WHEN OTHERS => 
        --case IN_On:
        sf_internal_predicateOutput := hdlcoder_to_stdlogic((reset_1 AND MA_in) = '1');
        IF sf_internal_predicateOutput = '1' THEN 
          is_Chart_next <= IN_Off;
          state <= '0';
        ELSE 
          state <= '1';
        END IF;
    END CASE;
  END PROCESS Chart_output;


END rtl;

